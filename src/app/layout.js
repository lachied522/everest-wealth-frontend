import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
import { cookies } from 'next/headers';
import { Inter } from 'next/font/google';

import { GlobalProvider } from '@/context/GlobalState';
import './styles/globals.css';


const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const checkDate = (dateTimeString) => {
  //check for any current advice
  const today = new Date();
  const datetime = new Date(dateTimeString);
  return (
    datetime.getDate() == today.getDate() &&
    datetime.getMonth() == today.getMonth() &&
    datetime.getFullYear() == today.getFullYear()
  )
}

const fetchData = async (session, supabase) => {
  if (!session) return [];
  //fetch universe data
  const { data: universeData, error: universeError } = await supabase
  .from("universe")
  .select("*");
  
  //fetch user data
  const { data: userData, error: userError } = await supabase
  .from("users")
  .select("portfolios!portfolios_user_id_fkey(id, name, objective, data), profiles!users_profile_fkey(*), advice(*)")
  .eq("id", session.user.id);
  
  if (userError) console.log(userError);
  console.log("data fetched");

  return [
    userData[0], 
    universeData
  ];    
}

export default async function RootLayout({ children }) {
  const supabase = createServerComponentClient({ cookies });

  const {
    data: { session },
  } = await supabase.auth.getSession();

  const [userData, universeData] = await fetchData(session, supabase);

  //tag any current recommendations with 'current'
  // for (const rec of userData['advice']) {
  //   if (checkDate(rec.created_at) && !rec.actioned) {
  //     rec['current'] = true;
  //     break;
  //   }
  // }

  return (
    <html lang="en">
      <head>
        <link
          href="https://uploads-ssl.webflow.com/64afbac816bb17eb2fdc3f03/css/everest-wealth.webflow.16b3dffc1.css"
          rel="stylesheet"
          type="text/css"
        />
      </head>
      <body className={inter.className}>
        <GlobalProvider session={session} userData={userData} universeData={universeData}>
          {children}
        </GlobalProvider>
      </body>
    </html>
  )
}
